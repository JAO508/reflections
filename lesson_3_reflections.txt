When would you want to use a remote repository rather than keeping all your
work local?

  If you want to work with other people on the same project, make it open
  source or work on it with another computer, you would want to use a remote
  repository.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

  Because sometimes another user is working on the same code. So if he would
  change something that would affect your code and is pulled directly from
  the remote, your code gets confusing or even unreadable.

Describe the differences between forks, clones, and branches. When would you
use one instead of another?

  Forks are copies of a whole remote repository. Clones are copies from a
  remote repository to a local directory. Branches are versions of files in a
  repository/directory.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    When you changed the file locally and someone committed to the file in the
    repository, you want to know what was updated. If you just push it you will
    merge it and in some cases you don't want it to be merged. So the benefit
    is that you can separate versions in branches even after changing the file.

How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?

  You have to send copies of data with sticks or emails or something. That
  would last very long and would be uncomfortable to merge. I don't know what
  would be easier.

When would you want to make changes in a separate branch rather than directly
in master? What benefits does each approach have?

  When you want to add feature or make a unique version you could want to make
  changes in a new branch so that the old branch does not break. If this
  feature is good and does not break anything you can merge it into the master
  branch, which perhaps was changed in that time. Branching helps to test code
  or helps to make the file in another language without losing the old file.
